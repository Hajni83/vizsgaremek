openapi: 3.0.0
info:
  version: 1.0.0
  title: GameBoard Webshop
  description: Endpoint Documentation
servers:
  - url: http://localhost:3000
paths:
  /products:
    get:
      description: Return a list of products
      tags:
        - Products
      responses:
        '200':
          description: List of products returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/{_id}:
    get:
      description: Get a product
      tags:
        - Products
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a Product
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Product'
    patch:
      description: Updates a product
      tags:
        - Products
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/search/{cat}:
    get:
      description: Search a product by Category
      tags:
        - Products
      parameters:
        - in: path
          name: cat
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a Product
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Product'
  /login:
    post:
      description: Create a new products
      tags:
        - Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Product has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders:
    get:
      description: Return a ordered of products
      tags:
        - Orders
      responses:
        '200':
          description: List of  ordered products returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      description: Creates a new product
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Product has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
  /orders/{_id}:
    get:
      description: Order a product
      tags:
        - Orders
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a Ordered Product
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Order'
    patch:
      description: Updates a product
      tags:
        - Orders
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Product has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /addresses:
    get:
      description: Return an address
      tags:
        - Addresses
      responses:
        '200':
          description: Return an address successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
    post:
      description: Creates a new address
      tags:
        - Addresses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Address has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /addresses/{_id}:
    get:
      description: Return an address
      tags:
        - Addresses
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns an Address
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Address'
    patch:
      description: Updates an address
      tags:
        - Addresses
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Address has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /categories:
    get:
      description: Return the categories list
      tags:
        - Categories
      responses:
        '200':
          description: Return categories successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /categories/{_id}:
    get:
      description: Return an category
      tags:
        - Categories
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns an Category
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Category'
    patch:
      description: Updates an category
      tags:
        - Categories
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Category has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      description: Return the user list
      security:
        - bearerAuth: []
      tags:
        - Users
      responses:
        '200':
          description: Return user successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{_id}:
    get:
      description: Return an user
      security:
        - bearerAuth: []
      tags:
        - Users
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns an User
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/User'
    patch:
      description: Updates a user
      security:
        - bearerAuth: []
      tags:
        - Users
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete a user by _id
      security:
        - bearerAuth: []
      tags:
        - Users
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Product:
      type: object
      required:
        - name
        - description
        - datasheet
        - image
        - price
      properties:
        name:
          type: string
        description:
          type: string
        datasheet:
          type: string
        image:
          type: string
        price:
          type: number
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
    Order:
      type: object
      required:
        - address
        - product
      properties:
        address:
          type: object
        product:
          type: object
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
    Address:
      type: object
      required:
        - country
        - city
        - street
        - notes
      properties:
        country:
          type: string
        city:
          type: string
        street:
          type: string
        notes:
          type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
    Category:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
    User:
      type: object
      required:
        - first_name
        - last_name
        - email
        - role
        - token
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        role:
          type: number
        token:
          type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
  